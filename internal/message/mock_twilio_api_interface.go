// Code generated by mockery v2.40.1. DO NOT EDIT.

package message

import (
	mock "github.com/stretchr/testify/mock"
	openapi "github.com/twilio/twilio-go/rest/api/v2010"
)

// mockTwilioAPIInterface is an autogenerated mock type for the twilioAPIInterface type
type mockTwilioAPIInterface struct {
	mock.Mock
}

type mockTwilioAPIInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *mockTwilioAPIInterface) EXPECT() *mockTwilioAPIInterface_Expecter {
	return &mockTwilioAPIInterface_Expecter{mock: &_m.Mock}
}

// CreateMessage provides a mock function with given fields: params
func (_m *mockTwilioAPIInterface) CreateMessage(params *openapi.CreateMessageParams) (*openapi.ApiV2010Message, error) {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for CreateMessage")
	}

	var r0 *openapi.ApiV2010Message
	var r1 error
	if rf, ok := ret.Get(0).(func(*openapi.CreateMessageParams) (*openapi.ApiV2010Message, error)); ok {
		return rf(params)
	}
	if rf, ok := ret.Get(0).(func(*openapi.CreateMessageParams) *openapi.ApiV2010Message); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*openapi.ApiV2010Message)
		}
	}

	if rf, ok := ret.Get(1).(func(*openapi.CreateMessageParams) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockTwilioAPIInterface_CreateMessage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateMessage'
type mockTwilioAPIInterface_CreateMessage_Call struct {
	*mock.Call
}

// CreateMessage is a helper method to define mock.On call
//   - params *openapi.CreateMessageParams
func (_e *mockTwilioAPIInterface_Expecter) CreateMessage(params interface{}) *mockTwilioAPIInterface_CreateMessage_Call {
	return &mockTwilioAPIInterface_CreateMessage_Call{Call: _e.mock.On("CreateMessage", params)}
}

func (_c *mockTwilioAPIInterface_CreateMessage_Call) Run(run func(params *openapi.CreateMessageParams)) *mockTwilioAPIInterface_CreateMessage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*openapi.CreateMessageParams))
	})
	return _c
}

func (_c *mockTwilioAPIInterface_CreateMessage_Call) Return(_a0 *openapi.ApiV2010Message, _a1 error) *mockTwilioAPIInterface_CreateMessage_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockTwilioAPIInterface_CreateMessage_Call) RunAndReturn(run func(*openapi.CreateMessageParams) (*openapi.ApiV2010Message, error)) *mockTwilioAPIInterface_CreateMessage_Call {
	_c.Call.Return(run)
	return _c
}

// newMockTwilioAPIInterface creates a new instance of mockTwilioAPIInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockTwilioAPIInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockTwilioAPIInterface {
	mock := &mockTwilioAPIInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
