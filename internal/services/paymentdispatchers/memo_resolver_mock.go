// Code generated by mockery v2.43.2. DO NOT EDIT.

package paymentdispatchers

import (
	context "context"

	data "github.com/stellar/stellar-disbursement-platform-backend/internal/data"
	mock "github.com/stretchr/testify/mock"

	schema "github.com/stellar/stellar-disbursement-platform-backend/pkg/schema"
)

// MockMemoResolver is an autogenerated mock type for the MemoResolverInterface type
type MockMemoResolver struct {
	mock.Mock
}

// GetMemo provides a mock function with given fields: ctx, receiverWallet
func (_m *MockMemoResolver) GetMemo(ctx context.Context, receiverWallet data.ReceiverWallet) (*schema.Memo, error) {
	ret := _m.Called(ctx, receiverWallet)

	if len(ret) == 0 {
		panic("no return value specified for GetMemo")
	}

	var r0 *schema.Memo
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, data.ReceiverWallet) (*schema.Memo, error)); ok {
		return rf(ctx, receiverWallet)
	}
	if rf, ok := ret.Get(0).(func(context.Context, data.ReceiverWallet) *schema.Memo); ok {
		r0 = rf(ctx, receiverWallet)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*schema.Memo)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, data.ReceiverWallet) error); ok {
		r1 = rf(ctx, receiverWallet)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockMemoResolver creates a new instance of MockMemoResolver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMemoResolver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMemoResolver {
	mock := &MockMemoResolver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
