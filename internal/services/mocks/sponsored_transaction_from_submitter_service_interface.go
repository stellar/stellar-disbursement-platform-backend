// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockSponsoredTransactionFromSubmitterService is an autogenerated mock type for the SponsoredTransactionFromSubmitterServiceInterface type
type MockSponsoredTransactionFromSubmitterService struct {
	mock.Mock
}

// SyncBatchTransactions provides a mock function with given fields: ctx, batchSize, tenantID
func (_m *MockSponsoredTransactionFromSubmitterService) SyncBatchTransactions(ctx context.Context, batchSize int, tenantID string) error {
	ret := _m.Called(ctx, batchSize, tenantID)

	if len(ret) == 0 {
		panic("no return value specified for SyncBatchTransactions")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string) error); ok {
		r0 = rf(ctx, batchSize, tenantID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockSponsoredTransactionFromSubmitterService creates a new instance of MockSponsoredTransactionFromSubmitterService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSponsoredTransactionFromSubmitterService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSponsoredTransactionFromSubmitterService {
	mock := &MockSponsoredTransactionFromSubmitterService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
