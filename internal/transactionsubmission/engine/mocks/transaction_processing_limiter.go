// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	utils "github.com/stellar/stellar-disbursement-platform-backend/internal/transactionsubmission/utils"
	mock "github.com/stretchr/testify/mock"
)

// MockTransactionProcessingLimiter is an autogenerated mock type for the TransactionProcessingLimiter type
type MockTransactionProcessingLimiter struct {
	mock.Mock
}

// AdjustLimitIfNeeded provides a mock function with given fields: hErr
func (_m *MockTransactionProcessingLimiter) AdjustLimitIfNeeded(hErr *utils.HorizonErrorWrapper) {
	_m.Called(hErr)
}

// LimitValue provides a mock function with given fields:
func (_m *MockTransactionProcessingLimiter) LimitValue() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewMockTransactionProcessingLimiter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockTransactionProcessingLimiter creates a new instance of MockTransactionProcessingLimiter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTransactionProcessingLimiter(t mockConstructorTestingTNewMockTransactionProcessingLimiter) *MockTransactionProcessingLimiter {
	mock := &MockTransactionProcessingLimiter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
