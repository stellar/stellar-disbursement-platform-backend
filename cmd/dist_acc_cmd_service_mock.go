// Code generated by mockery v2.40.1. DO NOT EDIT.

package cmd

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDistAccCmdServiceInterface is an autogenerated mock type for the DistAccCmdServiceInterface type
type MockDistAccCmdServiceInterface struct {
	mock.Mock
}

// RotateDistributionAccount provides a mock function with given fields: ctx, distAccService
func (_m *MockDistAccCmdServiceInterface) RotateDistributionAccount(ctx context.Context, distAccService DistributionAccountService) error {
	ret := _m.Called(ctx, distAccService)

	if len(ret) == 0 {
		panic("no return value specified for RotateDistributionAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, DistributionAccountService) error); ok {
		r0 = rf(ctx, distAccService)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockDistAccCmdServiceInterface creates a new instance of MockDistAccCmdServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDistAccCmdServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDistAccCmdServiceInterface {
	mock := &MockDistAccCmdServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
