// Code generated by mockery v2.53.3. DO NOT EDIT.

package cmd

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTenantsCmdServiceInterface is an autogenerated mock type for the TenantsCmdServiceInterface type
type MockTenantsCmdServiceInterface struct {
	mock.Mock
}

// EnsureDefaultTenant provides a mock function with given fields: ctx, tenantService
func (_m *MockTenantsCmdServiceInterface) EnsureDefaultTenant(ctx context.Context, tenantService TenantService) error {
	ret := _m.Called(ctx, tenantService)

	if len(ret) == 0 {
		panic("no return value specified for EnsureDefaultTenant")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, TenantService) error); ok {
		r0 = rf(ctx, tenantService)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockTenantsCmdServiceInterface creates a new instance of MockTenantsCmdServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTenantsCmdServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTenantsCmdServiceInterface {
	mock := &MockTenantsCmdServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
