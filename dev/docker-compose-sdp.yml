version: '3.8'
services:
  db:
    container_name: sdp_v2_database-mtn
    image: postgres:14-alpine
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: sdp_mtn
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-db:/data/postgres
  sdp-api:
    container_name: sdp-api-mtn
    image: stellar/sdp-v2:development
    build:
      context: ../
      dockerfile: Dockerfile.development
    ports:
      - "8000:8000"
      - "8002:8002"
      - "8003:8003"
      - "2345:2345"
    environment:
      BASE_URL: http://localhost:8000
      DATABASE_URL: postgres://postgres@db:5432/sdp_mtn?sslmode=disable
      ENVIRONMENT: localhost
      LOG_LEVEL: INFO
      PORT: "8000"
      METRICS_PORT: "8002"
      METRICS_TYPE: PROMETHEUS
      EMAIL_SENDER_TYPE: DRY_RUN
      SMS_SENDER_TYPE: DRY_RUN
      NETWORK_PASSPHRASE: "Test SDF Network ; September 2015"
      SEP10_SIGNING_PUBLIC_KEY: ${SEP10_SIGNING_PUBLIC_KEY}
      ANCHOR_PLATFORM_BASE_SEP_URL: http://localhost:8080
      ANCHOR_PLATFORM_BASE_PLATFORM_URL: http://anchor-platform:8085
      DISTRIBUTION_PUBLIC_KEY: ${DISTRIBUTION_PUBLIC_KEY}
      DISTRIBUTION_SEED: ${DISTRIBUTION_SEED}
      RECAPTCHA_SITE_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
      DISABLE_MFA: "true"
      DISABLE_RECAPTCHA: "true"
      CORS_ALLOWED_ORIGINS: "*"

      # multi-tenant
      ADMIN_PORT: "8003"
      INSTANCE_NAME: "SDP Testnet on Docker"
      TENANT_XLM_BOOTSTRAP_AMOUNT: 5
      SINGLE_TENANT_MODE: "true"

      # scheduler options
      SCHEDULER_RECEIVER_INVITATION_JOB_SECONDS: "10"
      SCHEDULER_PAYMENT_JOB_SECONDS: "10"

      # Kafka Configuration - possible values: KAFKA; SCHEDULER
      EVENT_BROKER_TYPE: "SCHEDULER"

      # multi-tenant secrets:
      ADMIN_ACCOUNT: SDP-admin
      ADMIN_API_KEY: api_key_1234567890
      DISTRIBUTION_ACCOUNT_ENCRYPTION_PASSPHRASE: ${DISTRIBUTION_ACCOUNT_ENCRYPTION_PASSPHRASE}
      CHANNEL_ACCOUNT_ENCRYPTION_PASSPHRASE: ${CHANNEL_ACCOUNT_ENCRYPTION_PASSPHRASE}

      # secrets:
      AWS_ACCESS_KEY_ID: MY_AWS_ACCESS_KEY_ID
      AWS_REGION: MY_AWS_REGION
      AWS_SECRET_ACCESS_KEY: MY_AWS_SECRET_ACCESS_KEY
      AWS_SES_SENDER_ID: MY_AWS_SES_SENDER_ID
      TWILIO_ACCOUNT_SID: MY_TWILIO_ACCOUNT_SID
      TWILIO_AUTH_TOKEN: MY_TWILIO_AUTH_TOKEN
      TWILIO_SERVICE_SID: MY_TWILIO_SERVICE_SID
      TWILIO_SENDGRID_API_KEY: MY_TWILIO_SENDGRID_API_KEY
      TWILIO_SENDGRID_SENDER_ADDRESS: MY_TWILIO_SENDGRID_SENDER_ADDRESS
      EC256_PRIVATE_KEY: "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgdo6o+tdFkF94B7z8\nnoybH6/zO3PryLLjLbj54/zOi4WhRANCAAQncc2mE8AQoe+1GOyXkqPBz21MypLa\nmZg3JusuzFnpy5C+DbKIShdmLE/ZwnvtywcKVcLpxvXBCn8E0YO8Yqg+\n-----END PRIVATE KEY-----"
      SEP10_SIGNING_PRIVATE_KEY: ${SEP10_SIGNING_PRIVATE_KEY}
      SEP24_JWT_SECRET: jwt_secret_1234567890
      RECAPTCHA_SITE_SECRET_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
      ANCHOR_PLATFORM_OUTGOING_JWT_SECRET: mySdpToAnchorPlatformSecret
    entrypoint: ""
    command:
      - sh
      - -c
      - |
        sleep 5
        ./stellar-disbursement-platform db admin migrate up
        ./stellar-disbursement-platform db tss migrate up
        ./stellar-disbursement-platform db auth migrate up --all
        ./stellar-disbursement-platform db sdp migrate up --all
        ./stellar-disbursement-platform db setup-for-network --all
        echo "starting dlv stellar-disbursement-platform"
        /go/bin/dlv exec ./stellar-disbursement-platform serve --continue --accept-multiclient --headless --listen=:2345 --api-version=2 --log
    volumes:
      - ./scripts/add_test_users.sh:/app/github.com/stellar/stellar-disbursement-platform/dev/scripts/add_test_users.sh

  demo-wallet:
    build:
      context: .
      dockerfile: Dockerfile-demo-wallet
    ports:
      - "4000:80"
    volumes:
      - ./env-config-demo-wallet.js:/usr/share/nginx/html/settings/env-config.js

volumes:
  postgres-db:
    driver: local
  postgres-ap-db:
    driver: local
